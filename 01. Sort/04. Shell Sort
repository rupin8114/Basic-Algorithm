#include <iostream>

void shell_sort(int *arr, int n);
void insertion_sort(int *arr, int first, int last, int gap);

int main() {
  int length;
  printf("정렬할 숫자의 개수를 입력해주세요 : ");
  scanf("%d", &length);
  printf("\n정렬할 숫자들을 입력해주세요\n");

  //입력
  int *arr = (int *)malloc(sizeof(int) * length);
  for (int i = 0; i < length; i++) {
    scanf("%d", &arr[i]);
    printf("%d ",arr[i]);
  }

  //셸 정렬
  shell_sort(arr, length);

  //출력
  for (int i = 0; i < length; i++) {
    printf("%d ", arr[i]);
  }

  return 0;
}
/*
i번 반복할때마다 가장 큰 원소가 가장 오른쪽에 오는 것은 확실하기에 반복할 때
제외하고 정렬한다. "여기"의 부등호를 바꿈으로써 오름차순 정렬이 아니라 내림차순
정렬이 가능하다.
*/
void shell_sort(int *arr, int n) {
  int gap = n;
  int i;
  printf("실행");
  while (gap > 1) {
    gap = gap / 2;
    if ((gap % 2) == 0)
      gap = gap + 1;
    for (i = 0; i < gap; i++) {
      printf("실행");
      insertion_sort(arr, i, n, gap);
    }
  }
}

void insertion_sort(int list[], int first, int last, int gap){
  int i, j, key;

  for(i=first+gap; i<last; i=i+gap){
    key = list[i];
    
    for(j=i-gap; j>=first && list[j]>key; j=j-gap){
      list[j+gap] = list[j];
    }

    list[j+gap] = key;
  }
}
